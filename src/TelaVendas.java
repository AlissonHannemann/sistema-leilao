import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;



public class TelaVendas extends javax.swing.JFrame {

    private JTable table;
    private DefaultTableModel model;
    private JButton btnVender;
    
    public TelaVendas() {
        // Configurações da tela principal
        setTitle("Vendas - Produtos Vendidos");
        setSize(600, 400);
        setLocationRelativeTo(null); // Centraliza a janela
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // Criação do modelo de tabela com colunas para Exibir os dados
        model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nome");
        model.addColumn("Valor");
        model.addColumn("Status");

        // Criação da tabela e vinculação ao modelo
        table = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(table);
        add(scrollPane, BorderLayout.CENTER);
        
        // Criação do botão "Vender"
        btnVender = new JButton("Vender Produto");
        add(btnVender, BorderLayout.SOUTH); // Adicionando o botão na parte inferior
        
        // Adicionar o ActionListener para o botão
        btnVender.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                venderProduto();
            }
        });

        // Carregar os produtos vendidos
        carregarProdutosVendidos();
    }
    
    // Método que carrega os produtos vendidos na tabela
    private void carregarProdutosVendidos() {
        ProdutosDAO produtosDAO = new ProdutosDAO();
        ArrayList<ProdutosDTO> produtosVendidos = produtosDAO.listarProdutosVendidos();
        
        // Limpar a tabela antes de carregar os dados
        model.setRowCount(0);

        // Adicionando os produtos à tabela
        for (ProdutosDTO produto : produtosVendidos) {
            model.addRow(new Object[]{
                produto.getId(),
                produto.getNome(),
                produto.getValor(),
                produto.getStatus()
            });
        }
    }
    
    // Método que executa a venda do produto
    private void venderProduto() {
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            // Obter o ID do produto da linha selecionada
            int idProduto = (int) model.getValueAt(selectedRow, 0);

            // Criar uma instância de ProdutosDAO para atualizar o status
            ProdutosDAO produtosDAO = new ProdutosDAO();
            boolean sucesso = produtosDAO.venderProduto(idProduto);

            if (sucesso) {
                JOptionPane.showMessageDialog(this, "Produto vendido com sucesso!");
                // Atualizar a tabela para refletir a mudança
                carregarProdutosVendidos();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao vender o produto.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um produto para vender.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                new TelaVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
